GLBUFFERSUBDATA(3G)		  OpenGL 3.3		   GLBUFFERSUBDATA(3G)



NAME
       glBufferSubData - updates a subset of a buffer object's data store

C SPECIFICATION
       void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size,
			    const GLvoid * data);

PARAMETERS
       target
	   Specifies the target buffer object. The symbolic constant must be
	   GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER,
	   GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER,
	   GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER,
	   GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.

       offset
	   Specifies the offset into the buffer object's data store where data
	   replacement will begin, measured in bytes.

       size
	   Specifies the size in bytes of the data store region being
	   replaced.

       data
	   Specifies a pointer to the new data that will be copied into the
	   data store.

DESCRIPTION
       glBufferSubData redefines some or all of the data store for the buffer
       object currently bound to target. Data starting at byte offset offset
       and extending for size bytes is copied to the data store from the
       memory pointed to by data. An error is thrown if offset and size
       together define a range beyond the bounds of the buffer object's data
       store.

NOTES
       When replacing the entire data store, consider using glBufferSubData
       rather than completely recreating the data store with glBufferData.
       This avoids the cost of reallocating the data store.

       Consider using multiple buffer objects to avoid stalling the rendering
       pipeline during data store updates. If any rendering in the pipeline
       makes reference to data in the buffer object being updated by
       glBufferSubData, especially from the specific region being updated,
       that rendering must drain from the pipeline before the data store can
       be updated.

       Clients must align data elements consistent with the requirements of
       the client platform, with an additional base-level requirement that an
       offset within a buffer to a datum comprising N bytes be a multiple of
       N.

ERRORS
       GL_INVALID_ENUM is generated if target is not one of the accepted
       buffer targets.


       GL_INVALID_VALUE is generated if offset or size is negative, or if
       together they define a region of memory that extends beyond the buffer
       object's allocated data store.


       GL_INVALID_OPERATION is generated if the reserved buffer object name 0
       is bound to target.


       GL_INVALID_OPERATION is generated if the buffer object being updated is
       mapped.

ASSOCIATED GETS
       glGetBufferSubData()

SEE ALSO
       glBindBuffer(), glBufferData(), glMapBuffer(), glUnmapBuffer()

COPYRIGHT
       Copyright (C) 2005 Addison-Wesley. This material may be distributed
       subject to the terms and conditions set forth in the Open Publication
       License, v 1.0, 8 June 1999.  http://opencontent.org/openpub/.



OpenGL 3.3			  03/08/2011		   GLBUFFERSUBDATA(3G)
