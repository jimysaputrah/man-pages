XPath::Node::Element(3User Contributed Perl DocumentatiXPath::Node::Element(3)



NAME
       Element - an <element>

API
   new ( name, prefix )
       Create a new Element node with name "name" and prefix "prefix". The
       name be "prefix:local" if prefix is defined. I know that sounds wierd,
       but it works ;-)

   getName
       Returns the name (including "prefix:" if defined) of this element.

   getLocalName
       Returns just the local part of the name (the bit after "prefix:").

   getChildNodes
       Returns the children of this element. In list context returns a list.
       In scalar context returns an array ref.

   getChildNode ( pos )
       Returns the child at position pos.

   appendChild ( childnode )
       Appends the child node to the list of current child nodes.

   getAttribute ( name )
       Returns the attribute node with key name.

   getAttributes / getAttributeNodes
       Returns the attribute nodes. In list context returns a list. In scalar
       context returns an array ref.

   appendAttribute ( attrib_node)
       Appends the attribute node to the list of attributes (XML::XPath stores
       attributes in order).

   getNamespace ( prefix )
       Returns the namespace node by the given prefix

   getNamespaces / getNamespaceNodes
       Returns the namespace nodes. In list context returns a list. In scalar
       context returns an array ref.

   appendNamespace ( ns_node )
       Appends the namespace node to the list of namespaces.

   getPrefix
       Returns the prefix of this element

   getExpandedName
       Returns the expanded name of this element (not yet implemented right).

   string_value
       For elements, the string_value is the concatenation of all
       string_values of all text-descendants of the element node in document
       order.

   toString ( [ norecurse ] )
       Output (and all children) the node to a string. Doesn't process
       children if the norecurse option is a true value.



perl v5.10.1			  2003-01-26	       XPath::Node::Element(3)
