MooseX::Storage::EnginMooseX::Storage::Engine::Trait::DisableCycleDetection(3)



NAME
       MooseX::Storage::Engine::Trait::DisableCycleDetection - A custom trait
       to bypass cycle detection

SYNOPSIS
	   package Double;
	   use Moose;
	   use MooseX::Storage;
	   with Storage( traits => ['DisableCycleDetection'] );

	   has 'x' => ( is => 'rw', isa => 'HashRef' );
	   has 'y' => ( is => 'rw', isa => 'HashRef' );

	   my $ref = {};

	   my $double = Double->new( 'x' => $ref, 'y' => $ref );

	   $double->pack;

DESCRIPTION
       "MooseX::Storage" implements a primitive check for circular references.
       This check also triggers on simple cases as shown in the Synopsis.
       Providing the "DisableCycleDetection" traits disables checks for any
       cyclical references, so if you know what you are doing, you can bypass
       this check.

       This trait is applied to an instance of MooseX::Storage::Engine, for
       the user-visible version shown in the SYNOPSIS, see
       MooseX::Storage::Traits::DisableCycleDetection

METHODS
   Introspection
       meta

BUGS
       All complex software has bugs lurking in it, and this module is no
       exception. If you find a bug please either email me, or add the bug to
       cpan-RT.

AUTHOR
       Stevan Little <stevan.little@iinteractive.com>

COPYRIGHT AND LICENSE
       Copyright 2007-2008 by Infinity Interactive, Inc.

       <http://www.iinteractive.com>

       This library is free software; you can redistribute it and/or modify it
       under the same terms as Perl itself.



perl v5.12.4	      MooseX::Storage::Engine::Trait::DisableCycleDetection(3)
