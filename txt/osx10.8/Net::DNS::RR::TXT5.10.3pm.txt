Net::DNS::RR::TXT(3)  User Contributed Perl Documentation Net::DNS::RR::TXT(3)



NAME
       Net::DNS::RR::TXT - DNS TXT resource record

SYNOPSIS
       "use Net::DNS::RR";

DESCRIPTION
       Class for DNS Text (TXT) resource records.

METHODS
   txtdata
	   print "txtdata = ", $rr->txtdata, "\n";

       Returns the descriptive text as a single string, regardless of actual
       number of <character-string> elements.  Of questionable value.  Should
       be deprecated.

       Use "$txt->rdatastr()" or "$txt->char_str_list()" instead.

   char_str_list
	print "Individual <character-string> list: \n\t",
	      join("\n\t", $rr->char_str_list());

       Returns a list of the individual <character-string> elements, as
       unquoted strings.  Used by TXT->rdatastr and TXT->rr_rdata.

       NB: rdatastr will return quoted strings.

FEATURES
       The RR.pm module accepts semi-colons as a start of a comment. This is
       to allow the RR.pm to deal with RFC1035 specified zonefile format.

       For some applications of the TXT RR the semicolon is relevant, you will
       need to escape it on input.

       Also note that you should specify the several character strings
       separately. The easiest way to do so is to include the whole argument
       in single quotes and the several character strings in double quotes.
       Double quotes inside the character strings will need to be escaped.

       my $TXTrr=Net::DNS::RR->new('txt2.t.net-dns.org.  60   IN      TXT
       "Test1 \" \; more stuff"  "Test2"');

       would result in $TXTrr->char_str_list())[0] containing 'Test1 " ; more
       stuff' and $TXTrr->char_str_list())[1] containing 'Test2'

       Note that the rdatastr method (and therefore the print, and string
       method) returns the escaped format.

COPYRIGHT
       Copyright (c) 1997-2002 Michael Fuhr.

       Portions Copyright (c) 2002-2004 Chris Reinhardt.  Portions Copyright
       (c) 2005 Olaf Kolkman (NLnet Labs)

       All rights reserved.  This program is free software; you may
       redistribute it and/or modify it under the same terms as Perl itself.

SEE ALSO
       perl(1), Net::DNS, Net::DNS::Resolver, Net::DNS::Packet,
       Net::DNS::Header, Net::DNS::Question, Net::DNS::RR, RFC 1035 Section
       3.3.14



perl v5.10.1			  2009-12-30		  Net::DNS::RR::TXT(3)
