GLGETTEXPARAMETER(3G)		  OpenGL 3.3		 GLGETTEXPARAMETER(3G)



NAME
       glGetTexParameter - return texture parameter values

C SPECIFICATION
       void glGetTexParameterfv(GLenum target, GLenum pname,
				GLfloat * params);

       void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);

PARAMETERS
       target
	   Specifies the symbolic name of the target texture.  GL_TEXTURE_1D,
	   GL_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY,
	   GL_TEXTURE_3D, GL_TEXTURE_RECTANGLE, and GL_TEXTURE_CUBE_MAP are
	   accepted.

       pname
	   Specifies the symbolic name of a texture parameter.
	   GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BORDER_COLOR,
	   GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_COMPARE_FUNC,
	   GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_LEVEL,
	   GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD,
	   GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B,
	   GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_SWIZZLE_RGBA, GL_TEXTURE_WRAP_S,
	   GL_TEXTURE_WRAP_T, and GL_TEXTURE_WRAP_R are accepted.

       params
	   Returns the texture parameters.

DESCRIPTION
       glGetTexParameter returns in params the value or values of the texture
       parameter specified as pname.  target defines the target texture.
       GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY,
       GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, and GL_TEXTURE_CUBE_MAP
       specify one-, two-, or three-dimensional, one-dimensional array,
       two-dimensional array, rectangle or cube-mapped texturing,
       respectively.  pname accepts the same symbols as glTexParameter(), with
       the same interpretations:

       GL_TEXTURE_MAG_FILTER
	   Returns the single-valued texture magnification filter, a symbolic
	   constant. The initial value is GL_LINEAR.

       GL_TEXTURE_MIN_FILTER
	   Returns the single-valued texture minification filter, a symbolic
	   constant. The initial value is GL_NEAREST_MIPMAP_LINEAR.

       GL_TEXTURE_MIN_LOD
	   Returns the single-valued texture minimum level-of-detail value.
	   The initial value is -1000.

       GL_TEXTURE_MAX_LOD
	   Returns the single-valued texture maximum level-of-detail value.
	   The initial value is 1000.

       GL_TEXTURE_BASE_LEVEL
	   Returns the single-valued base texture mipmap level. The initial
	   value is 0.

       GL_TEXTURE_MAX_LEVEL
	   Returns the single-valued maximum texture mipmap array level. The
	   initial value is 1000.

       GL_TEXTURE_SWIZZLE_R
	   Returns the red component swizzle. The initial value is GL_RED.

       GL_TEXTURE_SWIZZLE_G
	   Returns the green component swizzle. The initial value is GL_GREEN.

       GL_TEXTURE_SWIZZLE_B
	   Returns the blue component swizzle. The initial value is GL_BLUE.

       GL_TEXTURE_SWIZZLE_A
	   Returns the alpha component swizzle. The initial value is GL_ALPHA.

       GL_TEXTURE_SWIZZLE_RGBA
	   Returns the component swizzle for all channels in a single query.

       GL_TEXTURE_WRAP_S
	   Returns the single-valued wrapping function for texture coordinate
	   s, a symbolic constant. The initial value is GL_REPEAT.

       GL_TEXTURE_WRAP_T
	   Returns the single-valued wrapping function for texture coordinate
	   t, a symbolic constant. The initial value is GL_REPEAT.

       GL_TEXTURE_WRAP_R
	   Returns the single-valued wrapping function for texture coordinate
	   r, a symbolic constant. The initial value is GL_REPEAT.

       GL_TEXTURE_BORDER_COLOR
	   Returns four integer or floating-point numbers that comprise the
	   RGBA color of the texture border. Floating-point values are
	   returned in the range 0 1. Integer values are returned as a linear
	   mapping of the internal floating-point representation such that 1.0
	   maps to the most positive representable integer and -1.0 maps to
	   the most negative representable integer. The initial value is (0,
	   0, 0, 0).

       GL_TEXTURE_COMPARE_MODE
	   Returns a single-valued texture comparison mode, a symbolic
	   constant. The initial value is GL_NONE. See glTexParameter().

       GL_TEXTURE_COMPARE_FUNC
	   Returns a single-valued texture comparison function, a symbolic
	   constant. The initial value is GL_LEQUAL. See glTexParameter().

NOTES
       If an error is generated, no change is made to the contents of params.

ERRORS
       GL_INVALID_ENUM is generated if target or pname is not an accepted
       value.

SEE ALSO
       glTexParameter()

COPYRIGHT
       Copyright (C) 1991-2006 Silicon Graphics, Inc. Copyright (C) 2010
       Khronos Group. This document is licensed under the SGI Free Software B
       License. For details, see http://oss.sgi.com/projects/FreeB/.



OpenGL 3.3			  03/08/2011		 GLGETTEXPARAMETER(3G)
